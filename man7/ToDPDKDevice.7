.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/userlevel/todpdkdevice.hh:11'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "TODPDKDEVICE" 7click "12/Oct/2017" "Click"
.SH "NAME"
ToDPDKDevice \- Click element;
sends packets to network device using Intel's DPDK (user-level)
.SH "SYNOPSIS"
\fBToDPDKDevice\fR(PORT [, QUEUE [, \fIkeywords\fR IQUEUE, BLOCKING, etc.]])

\fBPorts\fR: 1 input, no outputs
.br
\fBProcessing\fR: push
.br
\fBDrivers\fR: userlevel
.br
.SH "DESCRIPTION"
Sends packets to a network device with DPDK port identifier PORT. As DPDK does
not support polling, this element only supports PUSH. It will build a batch of
packets inside an internal queue (limited to IQUEUE packets) until it reaches
BURST packets, and then send the batch to DPDK. If the batch is not ready after
TIMEOUT ms, it will flush the batch of packets even if it doesn't cointain
BURST packets.
.PP
Arguments:
.PP


.IP "PORT" 8
Integer.  Port identifier of the device.
.IP "" 8
.IP "QUEUE" 8
Integer.  Index of the queue to use. If omitted or negative, auto-increment
between \fBToDPDKDevice\fR attached to the same port will be used.
.IP "" 8
.IP "IQUEUE" 8
Integer.  Size of the internal queue, i.e. number of packets that we can buffer
before pushing them to the DPDK framework. If IQUEUE is bigger than BURST,
some packets could be buffered in the internal queue when the output ring is
full. Defaults to 1024.
.IP "" 8
.IP "BLOCKING" 8
Boolean.  If true, when there is no more space in the output device ring, and
the IQUEUE is full, we'll block until some packet could be sent. If false the
packet will be dropped. Defaults to true.
.IP "" 8
.IP "BURST" 8
Integer.  Number of packets to batch before sending them out. A bigger BURST
leads to more latency, but a better throughput. The default value of 32 is
recommended as it is what DPDK will do under the hood. Prefer to set the
TIMEOUT parameter to 0 if the throughput is low as it will maintain
performance.
.IP "" 8
.IP "TIMEOUT" 8
Integer.  Set a timeout to flush the internal queue. It is useful under low
throughput as it could take a long time before reaching BURST packet in the
internal queue. The timeout is expressed in milliseconds. Setting the timer to
0 is not a bad idea as it will schedule after the source element (such as a
.M FromDPDKDevice 7 )
will have finished its burst, or all incoming packets. This
would therefore ensure that a flush is done right after all packets have been
processed by the Click pipeline. Setting a negative value disable the timer,
this is generally acceptable if the thoughput of this element rarely drops
below 32000 pps (~50 Mbps with maximal size packets) with a BURST of 32, as the
internal queue will wait on average 1 ms before containing 32 packets. Defaults
to 0 (immediate flush).
.IP "" 8
.IP "NDESC" 8
Integer.  Number of descriptors per ring. The default is 1024.
.IP "" 8
.PP
This element is only available at user level, when compiled with DPDK support.
.PP
.SH "EXAMPLES"

.nf
\&  ... -> ToDPDKDevice(2, QUEUE 0, BLOCKING true)
.fi
.PP



.SH "ELEMENT HANDLERS"



.IP "\fBn_sent\fR (read-only)" 5
Returns the number of packets sent by the device.
.IP "" 5
.IP "\fBn_dropped\fR (read-only)" 5
Returns the number of packets dropped by the device.
.IP "" 5
.IP "\fBreset_counts\fR (write-only)" 5
Resets n_send and n_dropped counts to zero.
.IP "" 5
.PP

.SH "SEE ALSO"
.M DPDKInfo 7 ,
.M FromDPDKDevice 7

