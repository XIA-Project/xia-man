.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/userlevel/progressbar.hh:9'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "PROGRESSBAR" 7click "12/Oct/2017" "Click"
.SH "NAME"
ProgressBar \- Click element;
prints a progress bar to standard error
.SH "SYNOPSIS"
\fBProgressBar\fR(POSHANDLER [, SIZEHANDLER, \fIKEYWORDS\fR])

\fBPorts\fR: none
.br
\fBDrivers\fR: userlevel
.br
.SH "DESCRIPTION"
Reads progress information from handlers, and displays an ASCII-art progress
bar on standard error, indicating how much progress has been made and how much
remains to go.
.PP
POSHANDLER and SIZEHANDLER are read handlers. Each of them should return a
nonnegative real number. POSHANDLER is checked each time the progress bar
displays; SIZEHANDLER is checked just once, the first time the progress bar
comes up. Intuitively, POSHANDLER represents the "position"; the process is
complete when its value equals the "size" returned by SIZEHANDLER. You may
give multiple position and/or size handlers, as a space-separated list; their
values are added together.
.PP
Keyword arguments are:
.PP


.IP "FIXED_SIZE" 8
Nonnegative real number. Used as the size when SIZEHANDLER is not supplied.
Default is no fixed size.
.IP "" 8
.IP "BANNER" 8
String. Print this string before the progress bar. For example, this might be
a section of some filename. Default is empty.
.IP "" 8
.IP "UPDATE" 8
Time in seconds (millisecond precision). The progress bar updates itself with
this frequency. Default is 1/4 second.
.IP "" 8
.IP "ACTIVE" 8
Boolean. The progress bar will not initially display itself if this is false.
Default is true.
.IP "" 8
.IP "DELAY" 8
Time in seconds (millisecond precision). Don't print a progress bar until at
least DELAY seconds have passed. Use this to avoid trivial progress bars (that
is, progress bars that immediately go to 100%). Default is no delay.
.IP "" 8
.IP "CHECK_STDOUT" 8
Boolean. If true, and the standard output is connected to a terminal, then do
not print a progress bar. Default is false.
.IP "" 8
.PP
Only available in user-level processes.
.PP
.SH "EXAMPLES"
This \fBProgressBar\fR shows how far into the file 
.M FromDump 7
has gotten:
.PP
.nf
\&  fd :: FromDump(~/largedump.gz) -> ...
\&  ProgressBar(fd.filepos, fd.filesize);
.fi
.PP
Here are some example progress bars. The first form occurs when the file size
is known; the second, when it is not known.
.PP
.nf
\&   74% |**************     | 23315KB    00:01 ETA
\& 
\&  |           ***          |  5184KB    --:-- ETA
.fi
.PP



.SH "NOTES"
Code based on the progress bar in the OpenSSH project's \fBscp\fR program, whose
authors are listed as Timo Rinne, Tatu Ylonen, Theo de Raadt, and Aaron
Campbell.
.PP

.SH "ELEMENT HANDLERS"



.IP "\fBmark_stopped\fR (write-only)" 5
When written, the progress bar changes to indicate that the transfer has
stopped, possibly prematurely.
.IP "" 5
.IP "\fBmark_done\fR (write-only)" 5
When written, the progress bar changes to indicate that the transfer has
successfully completed.
.IP "" 5
.IP "\fBpos\fR (read-only)" 5
Returns the progress bar's current position.
.IP "" 5
.IP "\fBsize\fR (read/write)" 5
Returns or sets the progress bar's size value, which is used to compute how
close the process is to completion.
.IP "" 5
.IP "\fBactive\fR (read/write)" 5
Returns or sets the ACTIVE setting, a Boolean value. An inactive progress bar
will not redraw itself.
.IP "" 5
.IP "\fBbanner\fR (read/write)" 5
Returns or sets the BANNER string.
.IP "" 5
.IP "\fBposhandler\fR (read/write)" 5
Returns or sets the read handlers used to read the position, as a
space-separated list.
.IP "" 5
.IP "\fBsizehandler\fR (read/write)" 5
Returns or sets the read handlers used to read the size, as a space-separated
list.
.IP "" 5
.IP "\fBreset\fR (write-only)" 5
When written, resets the progress bar to its initial state: the size is read
again, for example. Also sets ACTIVE to true.
.IP "" 5
.PP

.SH "SEE ALSO"
.M FromDump 7

