.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/tcpudp/fastudpflows.hh:12'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "FASTUDPFLOWS" 7click "12/Oct/2017" "Click"
.SH "NAME"
FastUDPFlows \- Click element;
creates packets flows with static UDP/IP/Ethernet headers
.SH "SYNOPSIS"
\fBFastUDPFlows\fR(RATE, LIMIT, LEN,
.br
.nf
\& SRCETH, SRCIP,N<>
\& DSTETH, DSTIP,N<>
\& FLOWS, FLOWSIZE [, CHECKSUM, ACTIVE])
.fi
.PP


\fBPorts\fR: no inputs, 1 output
.br
\fBProcessing\fR: pull
.br
.SH "DESCRIPTION"
\fBFastUDPFlows\fR is a benchmark tool. At initialization time, \fBFastUDPFlows\fR
creates FLOWS number of UDP/IP packets of length LENGTH (min 60), with source
ethernet address SRCETH, source IP address SRCIP, destination ethernet
address DSTETH, and destination IP address DSTIP. Source and
destination ports are randomly generated. The UDP checksum is calculated if
CHECKSUM is true; it is true by default. Each time the \fBFastUDPFlows\fR
element is called, it selects a flow, increments the reference count on the
skbuff created and returns the skbuff object w/o copying or cloning.
Therefore, the packet returned by \fBFastUDPFlows\fR should not be modified.
.PP
\fBFastUDPFlows\fR sents packets at RATE packets per second. It will send LIMIT
number of packets in total. Each flow is limited to FLOWSIZE number of
packets. After FLOWSIZE number of packets are sent, the sort and dst port
will be modified.
.PP
After \fBFastUDPFlows\fR has sent LIMIT packets, it will calculate the average
send rate (packets per second) between the first and last packets sent and
make that available in the rate handler.
.PP
By default \fBFastUDPFlows\fR is ACTIVE.
.PP

.SH "ELEMENT HANDLERS"



.IP "\fBcount\fR (read-only)" 5
Returns the total number of packets that have been generated.
.IP "" 5
.IP "\fBrate\fR (read/write)" 5
Returns or sets the RATE parameter.
.IP "" 5
.IP "\fBreset\fR (write)" 5
Reset and restart.
.IP "" 5
.IP "\fBactive\fR (write)" 5
Change ACTIVE
.IP "" 5
.PP

.SH "EXAMPLES"

.nf
\& FastUDPFlows(100000, 500000, 60,
\& 0:0:0:0:0:0, 1.0.0.1,
\& 1:1:1:1:1:1, 2.0.0.2,
\& 100, 10)
\& -> ToDevice;
.fi
.PP


