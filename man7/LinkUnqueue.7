.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/standard/linkunqueue.hh:11'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "LINKUNQUEUE" 7click "12/Oct/2017" "Click"
.SH "NAME"
LinkUnqueue \- Click element;
link emulator
.SH "SYNOPSIS"
\fBLinkUnqueue\fR(LATENCY, BANDWIDTH)

\fBPorts\fR: 1 input, 1 output
.br
\fBProcessing\fR: pull inputs, push outputs
.br
.SH "DESCRIPTION"
Pulls packets from the single input port, then delays them so as to emulate a
serial link with latency LATENCY (microsecond precision) and bandwidth
BANDWIDTH (such as "384kbps"). Thus, every packet is delayed at least
by LATENCY, and additionally delayed by its packet size and BANDWIDTH, and
by any packets ahead of it in the virtual link. Packets are pushed out the
single output port when their time comes.
.PP
\fBLinkUnqueue\fR listens for upstream notification, such as that available from
.M Queue 7 .
.PP
\fBLinkUnqueue\fR stores packets that are in transit over the virtual link. It
doesn't store any other packets, however; it doesn't pull from its input
unless there is room on the link. To emulate a link fed by a packet queue, use
a 
.RM "\(dq" Queue 7
-> \fBLinkUnqueue\fR" combination.
.PP
\fBLinkUnqueue\fR uses its input packets' "extra length" annotations, destroys their
"next packet" annotations, and updates their timestamp annotations.
.PP

.SH "ELEMENT HANDLERS"



.IP "\fBlatency\fR (read-only)" 5
The LATENCY argument.
.IP "" 5
.IP "\fBbandwidth\fR (read-only)" 5
The BANDWIDTH argument.
.IP "" 5
.IP "\fBsize\fR (read-only)" 5
The number of packets currently in, or partially in, the emulated link.
.IP "" 5
.IP "\fBreset\fR (write-only)" 5
When written, drops all packets in, or partially in, the emulated link.
.IP "" 5
.PP

.SH "SEE ALSO"
.M DelayUnqueue 7 ,
.M Queue 7 ,
.M Unqueue 7 ,
.M RatedUnqueue 7 ,
.M BandwidthRatedUnqueue 7 ,
.M DelayShaper 7 ,
.M SetTimestamp 7

