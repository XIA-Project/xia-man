.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/userlevel/kernelfilter.hh:7'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "KERNELFILTER" 7click "12/Oct/2017" "Click"
.SH "NAME"
KernelFilter \- Click element;
block kernel from handling packets
.SH "SYNOPSIS"
\fBKernelFilter\fR(FILTERSPEC, ...)

\fBPorts\fR: none
.br
\fBDrivers\fR: userlevel
.br
.SH "DESCRIPTION"
The \fBKernelFilter\fR element installs filter rules in the kernel to stop the
kernel from handling certain types of packets.  Use this in combination with
.M FromDevice.u 7
to handle packets in user-level Click configurations.
.PP
\fBKernelFilter\fR uses iptables(1) to install filters; if your system does not
support iptables(1), \fBKernelFilter\fR will fail.  Normally \fBKernelFilter\fR uses
either /sbin/iptables or /usr/sbin/iptables.  To override this use the
IPTABLES_COMMAND keyword argument.
.PP
\fBKernelFilter\fR uninstalls its firewall rules when Click shuts down.  If Click
shuts down uncleanly, for instance because of a segmentation fault or 'kill
-9', then the rules will remain in place, and you'll have to remove them
yourself.
.PP
Currently only one form of FILTERSPEC is understood.
.PP


.IP "\&'\f(CWdrop dev DEVNAME\fR'" 8
The kernel is blocked from handling any packets arriving on device DEVNAME.
However, these packets will still be visible to tcpdump(1), and to Click
elements like 
.M FromDevice.u 7 .
.IP "" 8
.PP

.SH "SEE ALSO"
.M FromDevice.u 7 ,
.M ToDevice.u 7 ,
.M KernelTap 7 ,
.M ifconfig 8

