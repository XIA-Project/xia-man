.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/ip/lineariplookup.hh:7'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "LINEARIPLOOKUP" 7click "12/Oct/2017" "Click"
.SH "NAME"
LinearIPLookup \- Click element;
simple IP routing table
.SH "SYNOPSIS"
\fBLinearIPLookup\fR(ADDR1/MASK1 [GW1] OUT1, ADDR2/MASK2 [GW2] OUT2, ...)

\fBPorts\fR: 1 input, any number of outputs
.br
\fBProcessing\fR: push
.br
.SH "DESCRIPTION"
\fBNote:\fR Lookups and table updates with \fBLinearIPLookup\fR are extremely slow; the
.M RadixIPLookup 7
and 
.M DirectIPLookup 7
elements should be preferred in almost all
cases.  See 
.M IPRouteTable 7
for a performance comparison.  We provide
\fBLinearIPLookup\fR nevertheless for its simplicity.
.PP
Expects a destination IP address annotation with each packet. Looks up that
address in its routing table, using longest-prefix-match, sets the destination
annotation to the corresponding GW (if specified), and emits the packet on the
indicated OUTput port.
.PP
Each argument is a route, specifying a destination and mask, an optional
gateway IP address, and an output port.
.PP
\fBLinearIPLookup\fR uses a linear search algorithm that may look at every route on
each packet. It is therefore most suitable for small routing tables.
.PP

.SH "EXAMPLES"
This example delivers broadcasts and packets addressed to the local
host (18.26.4.24) to itself, packets to net 18.26.4 to the
local interface, and all others via gateway 18.26.4.1:
.PP
.nf
\&  ... -> GetIPAddress(16) -> rt;
\&  rt :: LinearIPLookup(18.26.4.24/32 0,
\&                       18.26.4.255/32 0,
\&                       18.26.4.0/32 0,
\&                       18.26.4/24 1,
\&                       0/0 18.26.4.1 1);
\&  rt[0] -> ToHost;
\&  rt[1] -> ... -> ToDevice(eth0);
.fi
.PP



.SH "ELEMENT HANDLERS"



.IP "\fBtable\fR (read-only)" 5
Outputs a human-readable version of the current routing table.
.IP "" 5
.IP "\fBlookup\fR (read-only)" 5
Reports the OUTput port and GW corresponding to an address.
.IP "" 5
.IP "\fBadd\fR (write-only)" 5
Adds a route to the table. Format should be `\f(CWADDR/MASK [GW] OUT\fR'.
Fails if a route for \f(CWADDR/MASK\fR already exists.
.IP "" 5
.IP "\fBset\fR (write-only)" 5
Sets a route, whether or not a route for the same prefix already exists.
.IP "" 5
.IP "\fBremove\fR (write-only)" 5
Removes a route from the table. Format should be `\f(CWADDR/MASK\fR'.
.IP "" 5
.IP "\fBctrl\fR (write-only)" 5
Adds or removes a group of routes. Write `\f(CWadd\fR/\f(CWset ADDR/MASK [GW] OUT\fR' to
add a route, and `\f(CWremove ADDR/MASK\fR' to remove a route. You can supply
multiple commands, one per line; all commands are executed as one atomic
operation.
.IP "" 5
.PP

.SH "SEE ALSO"
.M RadixIPLookup 7 ,
.M DirectIPLookup 7 ,
.M RangeIPLookup 7 ,
.M StaticIPLookup 7 ,
.M SortedIPLookup 7 ,
.M LinuxIPLookup 7 ,
.M IPRouteTable 7

