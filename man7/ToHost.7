.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/linuxmodule/tohost.hh:6'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "TOHOST" 7click "12/Oct/2017" "Click"
.SH "NAME"
ToHost \- Click element;
sends packets to Linux
.SH "SYNOPSIS"
\fBToHost\fR([DEVNAME, \fIkeywords\fR])

\fBPorts\fR: 1 input, no outputs
.br
\fBProcessing\fR: push
.br
\fBDrivers\fR: linuxmodule
.br
.SH "DESCRIPTION"
Hands packets to the ordinary Linux protocol stack.
You should probably give Linux IP packets addressed to
the local machine (including broadcasts), and a copy
of each ARP reply.
.PP
If DEVNAME is present, packets without a preset device annotation are have
their annotations set to that network device.  (Linux requires a valid
device annotation on each received packet.)  As with 
.M ToDevice 7 ,
DEVNAME can
be an Ethernet address.
.PP
If TYPE is ETHER, then expects packets with Ethernet headers; this is the
default.  If TYPE is IP, then expects packets with raw IP headers.
.PP
This element is only available in the Linux kernel module.
.PP
Keyword arguments are:
.PP


.IP "SNIFFERS" 8
Boolean. If true, then \fBToHost\fR will send packets to the kernel so that only
tcpdump(1), and other sniffer programs on the host, will receive them.
Default is false.
.IP "" 8
.IP "TYPE" 8
Type of interface.  Choices are ETHER and IP.  Default is ETHER.
.IP "" 8
.IP "QUIET" 8
Boolean.  If true, then suppress device up/down messages.  Default is false.
.IP "" 8
.IP "ALLOW_NONEXISTENT" 8
Allow nonexistent devices. If true, and no device named DEVNAME exists when
the router is initialized, then \fBToHost\fR will report a warning (rather than
an error). Later, while the router is running, if a device named DEVNAME
appears, \fBToHost\fR will seamlessly begin using it. Default is false.
.IP "" 8
.IP "UP_CALL" 8
Write handler.  If supplied, this handler is called when the device or link
comes up.
.IP "" 8
.IP "DOWN_CALL" 8
Write handler.  If supplied, this handler is called when the device or link
goes down.
.IP "" 8
.PP

.SH "NOTES"
Linux expects packets to have valid device annotations and packet type
annotations.  \fBToHost\fR will not pass packets with null device annotations to
Linux!  Use the `\f(CWToHost(eth0)\fR' syntax to supply a device annotation.
Most packets generated by Click will have null device annotations -- for
example, 
.M InfiniteSource 7
makes packets with null device annotations.
Exceptions include 
.M FromDevice 7
and 
.M PollDevice 7 .
.PP
Linux depends on packet type annotations as well. It will generally only
process packets with packet type annotation HOST. (Other packets, such as
packets originally sent to some other host, are sent only to packet
sniffers like tcpdump(1). Linux will handle some BROADCAST and MULTICAST
packets.) By default, packets made by Click have HOST packet type
annotations. However, if you modified a packet that you originally got from
some device, that packet may have some other type. Use 
.M SetPacketType 7
to
reset the type appropriately.
.PP
Finally, IPv4 packets should have a destination IP address corresponding
to DEVNAME, and a routable source address. Otherwise Linux will silently
drop the packets.
.PP

.SS "Patchless Installations"
On patched installations, 
.M FromDevice 7
intercepts packets before they are
passed to packet sniffers like tcpdump.  However, on patchless
installations, packet sniffers receive incoming packets before 
.M FromDevice 7
can intercept them.  This means that in a configuration such as
.PP
.nf
\& FromDevice(eth0) -> ToHost;
.fi
.PP
packet sniffers will see eth0's packets twice, once before 
.M FromDevice 7
runs
and once when the packets are handed back to Linux via \fBToHost\fR.
.PP

.SH "ELEMENT HANDLERS"



.IP "\fBdrops\fR (read-only)" 5
Reports the number of packets \fBToHost\fR has dropped because they had a null
device annotation.
.IP "" 5
.PP

.SH "SEE ALSO"
.M ToHostSniffers 7 ,
.M FromHost 7 ,
.M FromDevice 7 ,
.M PollDevice 7 ,
.M ToDevice 7 ,
.M SetPacketType 7 ,
.M InfiniteSource 7

