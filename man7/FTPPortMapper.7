.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/app/ftpportmapper.hh:6'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "FTPPORTMAPPER" 7click "12/Oct/2017" "Click"
.SH "NAME"
FTPPortMapper \- Click element;
manipulates 
.M IPRewriter 7
for FTP
.SH "SYNOPSIS"
\fBFTPPortMapper\fR(CONTROL_REWRITER, DATA_REWRITER, DATA_REWRITER_INPUT)

\fBPorts\fR: 1 input, 1 output
.br
\fBProcessing\fR: agnostic
.br
.SH "DESCRIPTION"
Expects FTP control packets. Watches packets for PORT commands and installs
corresponding mappings into the specified 
.M IPRewriter 7 .
This makes FTP
possible through a NAT-like 
.M IPRewriter 7
setup.
.PP
CONTROL_REWRITER and DATA_REWRITER are the names of 
.M IPRewriter 7 -like
elements. CONTROL_REWRITER must be a 
.M TCPRewriter 7
element, through which the
FTP control packets are passed. Packets from \fBFTPPortMapper\fR must pass
downstream through CONTROL_REWRITER. DATA_REWRITER can be any
.M IPRewriter 7 -like
element; packets from the FTP data port must pass through
DATA_REWRITER. CONTROL_REWRITER and DATA_REWRITER might be the same
element.
.PP
DATA_REWRITER_INPUT is a valid input port number for DATA_REWRITER.  When a
control connection opens a new data port, a mapping is installed in
DATA_REWRITER as if a data packet had arrived on DATA_REWRITER_INPUT.
Usually DATA_REWRITER_INPUT refers to a pattern specification; see
.M IPRewriter 7
for more information.
.PP
In summary: Assume that an FTP packet with source address and port
1.0.0.2:6587 and destination address and port 2.0.0.2:21 contains a command
`PORT 1,0,0,2,3,9' (that is, 1.0.0.2:777). Furthermore assume that the
pattern corresponding to DATA_REWRITER_INPUT is `1.0.0.1 9000-14000 -
-'. Then \fBFTPPortMapper\fR performs the following actions:
.PP


.IP "*" 3
Creates a new mapping using the DATA_REWRITER_INPUT pattern. Say it returns
9000 as the new source port.  This installs the following mappings into the
rewriter:
.IP "" 3
.RS 3

.IP "1." 3
(1.0.0.2, 777, 2.0.0.2, 20) => (1.0.0.1, 9000, 2.0.0.2, 20)
.IP "" 3
.IP "2." 3
(2.0.0.2, 20, 1.0.0.1, 9000) => (2.0.0.2, 20, 1.0.0.2, 777)
.IP "" 3
.RE
.IP "" 3

.IP "*" 3
Rewrites the PORT command to `PORT 1,0,0,1,35,40' (that is,
1.0.0.1:9000).
.IP "" 3
.IP "*" 3
Updates the packet's IP and TCP checksums.
.IP "" 3
.IP "*" 3
Updates the downstream CONTROL_REWRITER to reflect the change in
sequence numbers introduced by the new PORT command. (The modified packet
containing the new PORT command will likely have a different length than
the original packet, so some sequence number patching is required.)
.IP "" 3
.IP "*" 3
Does \fInot\fR change the control packet header's addresses or port numbers.
.IP "" 3
.PP
For a PORT command to be recognized, it must be completely contained within
one packet, and it must be the first command in the packet. This is usually
the case. Also, the destination FTP data port is always assumed to be one
less than the destination FTP control port, which is read as the packet's
destination port number. This is also usually the case.
.PP
.SH "SEE ALSO"
.M IPRewriter 7 ,
.M TCPRewriter 7 ,
.M IPRewriterPatterns 7
.PP
RFC 959, File Transfer Protocol (FTP)

