.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/grid/stripdsrheader.hh:6'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "STRIPDSRHEADER" 7click "12/Oct/2017" "Click"
.SH "NAME"
StripDSRHeader \- Click element;
strips DSR header, saves offset to VLAN_ANNO
.SH "SYNOPSIS"
\fBStripDSRHeader\fR()

\fBPorts\fR: 1 input, 1 output
.br
\fBProcessing\fR: agnostic
.br
.SH "DESCRIPTION"
Strips the DSR header from DSR packets, saving the offset to
the VLAN_ANNO tag. Control packets are not stripped.
.PP
This element helps if one wants to modify the payload inside a DSR data
packet. The code to parse the DSR header is taken from Click's grid
elements 
.RM ( DSRRouteTable 7
etc).
.PP
The IP header is set to the payload of the DSR packet.  After modifying the
inner IP packet, UnstripDSRHeader can be used to restore the DSR header.
.PP
Based on Click's 
.M StripIPHeader 7
and 
.M DSRRouteTable 7
elements.
.PP

.SH "SEE ALSO"
.M CheckIPHeader 7 ,
.M MarkIPHeader 7 ,
.M StripIPHeader 7 ,
.M DSRRouteTable 7
.PP

.SH "EXAMPLES"
//DSR routing packets should go to input 1 of the DSR router
DSR_classifier::Classifier(09/C8,-)
.nf
\& -> StripDSRHeader
\& -> [... modify payload, stamp in timestamp or so ...]
\& -> UnstripDSRHeader
\& -> [1]dsr_rt::DSRRouteTable(...);
.fi
.PP


