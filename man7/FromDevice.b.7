.\" -*- mode: nroff -*-
.\" Generated by 'click-elem2man' from '../elements/bsdmodule/fromdevice.hh:4'
.de M
.IR "\\$1" "(\\$2)\\$3"
..
.de RM
.RI "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH "FROMDEVICE.B" 7click "12/Oct/2017" "Click"
.SH "NAME"
FromDevice.b \- Click element;
reads packets from network device (BSD kernel)
.SH "SYNOPSIS"
\fBFromDevice\fR(DEVNAME [, PROMISC, BURST, \fIKEYWORDS\fR])

\fBPorts\fR: no inputs, 1 output
.br
\fBProcessing\fR: push
.br
\fBDrivers\fR: bsdmodule
.br
.SH "DESCRIPTION"
This manual page describes the BSD kernel module version of the \fBFromDevice\fR
element. For the user-level element, read the 
.M FromDevice.u 7
manual page.
.PP
Intercepts all packets received by the BSD network interface named DEVNAME
and pushes them out output 0. The packets include the link-level header.
DEVNAME may also be an Ethernet address, in which case \fBFromDevice\fR searches for
a device with that address.
.PP
\fBFromDevice\fR pulls packets from a per-interface queue in the context of the
Click kernel thread.  It emits at most BURST packets per scheduling;
BURST is 8 by default.  At interrupt time, the kernel queues packets
onto the per-interface queue if there is a \fBFromDevice\fR attached to that
interface.
.PP
If PROMISC is set (by default, it is not), then the device is put into
promiscuous mode while \fBFromDevice\fR is active.
.PP
Keyword arguments are:
.PP


.IP "PROMISC" 8
Boolean. Same as the PROMISC argument.
.IP "" 8
.IP "BURST" 8
Unsigned integer. Same as the BURST argument.
.IP "" 8
.IP "ALLOW_NONEXISTENT" 8
Allow nonexistent devices. If true, and no device named DEVNAME exists when
the router is initialized, then \fBFromDevice\fR will report a warning (rather than
an error). Later, while the router is running, if a device named DEVNAME
appears, \fBFromDevice\fR will seamlessly begin outputing its packets. Default is
false.
.IP "" 8
.PP

.SH "NOTES"
The BSD network stack (above the device layer) won't see any packets from
the device. If you want BSD to process packets, you should hand them to
ToBSD.
.PP
\fBFromDevice\fR accesses packets the same way BSD does: through interrupts.
Performance is system-dependent (FreeBSD has a native polling mode
which can be used for better performance and stability).
.PP

.SH "SEE ALSO"
.M ToDevice 7 ,
.M FromHost 7 ,
.M ToHost 7 ,
.M FromDevice.u 7

