.TH "xsocket/Xaccept.c" 3 "Fri Mar 3 2017" "Version 2.0" "XSocket API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xsocket/Xaccept.c \- \fBXaccept()\fP, \fBXaccept4()\fP - accept/reject jobs sent to a destination\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'Xsocket\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBXaccept\fP (int sockfd, struct sockaddr *addr, socklen_t *addrlen)"
.br
.RI "\fIaccept a connection on an Xsocket \fP"
.ti -1c
.RI "int \fBXaccept4\fP (int sockfd, struct sockaddr *addr, socklen_t *addrlen, int flags)"
.br
.RI "\fIaccept a connection on an Xsocket \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int Xaccept (int sockfd, struct sockaddr * addr, socklen_t * addrlen)"
The Xaccept system call is is only valid with Xsockets created with the SOCK_STREAM transport type\&. It accepts the first available connection request for the listening socket, sockfd, creates a new connected socket, and returns a new Xsocket descriptor referring to that socket\&. The newly created socket is not in the listening state\&. The original socket sockfd is unaffected by this call\&.
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP an Xsocket previously created with the SOCK_STREAM type, and bound to a local DAG with \fBXbind()\fP 
.br
\fIaddr\fP if non-NULL, points to a block of memory that will contain the address of the peer on return 
.br
\fIaddrlen\fP on entry, contains the size of addr, on exit contains the actual size of the address\&. addr will be truncated, if the size passed in is smaller than the actual size\&.
.RE
.PP
\fBNote:\fP
.RS 4
See the man page for the standard accept() call for more details\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a non-negative integer that is the new Xsocket id 
.PP
-1 on error with errno set to an error compatible with those returned by the standard accept call\&. 
.RE
.PP

.SS "int Xaccept4 (int sockfd, struct sockaddr * addr, socklen_t * addrlen, int flags)"
The Xaccept4 system call is is only valid with Xsockets created with the SOCK_STREAM transport type\&. It accepts the first available connection request for the listening socket, sockfd, creates a new connected socket, and returns a new Xsocket descriptor referring to that socket\&. The newly created socket is not in the listening state\&. The original socket sockfd is unaffected by this call\&.
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP an Xsocket previously created with the SOCK_STREAM type, and bound to a local DAG with \fBXbind()\fP 
.br
\fIaddr\fP if non-NULL, points to a block of memory that will contain the address of the peer on return 
.br
\fIaddrlen\fP on entry, contains the size of addr, on exit contains the actual size of the address\&. addr will be truncated, if the size passed in is smaller than the actual size\&. 
.br
\fIflags\fP if SOCK_NONBLOCK is set, the new socket will be non-blocking\&. An error will be returned if any other bits in the flags are set\&.
.RE
.PP
\fBNote:\fP
.RS 4
See the man page for the standard accept() call for more details\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a non-negative integer that is the new Xsocket id 
.PP
-1 on error with errno set to an error compatible with those returned by the standard accept call\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSocket API from the source code\&.
