.TH "include/click/atomic.hh" 3 "Thu Oct 12 2017" "Click" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/click/atomic.hh \- An atomic 32-bit integer\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <click/glue\&.hh>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBatomic_uint32_t\fP"
.br
.RI "\fIA 32-bit integer with support for atomic operations\&. \fP"
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCLICK_ATOMIC_VAL\fP   _val\&.counter"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBatomic_uint32_t\fP \fBuatomic32_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "uint32_t \fBoperator+\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "uint32_t \fBoperator\-\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBatomic_uint32_t\fP &a, const \fBatomic_uint32_t\fP &b)"
.br
.in -1c
.SH "Detailed Description"
.PP 
An atomic 32-bit integer\&. 

> 
.SH "Author"
.PP 
Generated automatically by Doxygen for Click from the source code\&.
